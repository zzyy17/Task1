{
  "_args": [
    [
      {
        "raw": "gulp-less@https://nexus.hue.workslan/nexus/content/groups/hue-npm/gulp-less/-/gulp-less-2.0.3.tgz",
        "scope": null,
        "escapedName": "gulp-less",
        "name": "gulp-less",
        "rawSpec": "https://nexus.hue.workslan/nexus/content/groups/hue-npm/gulp-less/-/gulp-less-2.0.3.tgz",
        "spec": "https://nexus.hue.workslan/nexus/content/groups/hue-npm/gulp-less/-/gulp-less-2.0.3.tgz",
        "type": "remote"
      },
      "C:\\HUE\\closure-library-practice"
    ]
  ],
  "_from": "gulp-less@~2.0.1",
  "_id": "gulp-less@2.0.3",
  "_inCache": true,
  "_location": "/gulp-less",
  "_phantomChildren": {},
  "_requested": {
    "raw": "gulp-less@https://nexus.hue.workslan/nexus/content/groups/hue-npm/gulp-less/-/gulp-less-2.0.3.tgz",
    "scope": null,
    "escapedName": "gulp-less",
    "name": "gulp-less",
    "rawSpec": "https://nexus.hue.workslan/nexus/content/groups/hue-npm/gulp-less/-/gulp-less-2.0.3.tgz",
    "spec": "https://nexus.hue.workslan/nexus/content/groups/hue-npm/gulp-less/-/gulp-less-2.0.3.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://nexus.hue.workslan/nexus/content/groups/hue-npm/gulp-less/-/gulp-less-2.0.3.tgz",
  "_shasum": "350c5db9b90d5c7604952c07885945c194005773",
  "_shrinkwrap": null,
  "_spec": "gulp-less@https://nexus.hue.workslan/nexus/content/groups/hue-npm/gulp-less/-/gulp-less-2.0.3.tgz",
  "_where": "C:\\HUE\\closure-library-practice",
  "author": {
    "name": "Chris Cowan"
  },
  "bugs": {
    "url": "https://github.com/plus3network/gulp-less/issues"
  },
  "dependencies": {
    "convert-source-map": "^0.4.0",
    "gulp-util": "^3.0.1",
    "less": "^2.1.1",
    "object-assign": "^2.0.0",
    "through2": "^0.6.3",
    "vinyl-sourcemaps-apply": "^0.1.4"
  },
  "description": "Less for Gulp",
  "devDependencies": {
    "jshint": "^2.4.1",
    "mocha": "^2.1.0",
    "should": "^4.4.2"
  },
  "homepage": "https://github.com/plus3network/gulp-less#readme",
  "keywords": [
    "gulpplugin",
    "gulp",
    "less"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "gulp-less",
  "optionalDependencies": {},
  "readme": "gulp-less\n=========\n\nA LESS plugin for Gulp\n\n[![Build Status](https://travis-ci.org/plus3network/gulp-less.png?branch=master)](https://travis-ci.org/plus3network/gulp-less)\n\n## Install\n\n```\nnpm install gulp-less\n```\n\n## Usage\n```javascript\nvar less = require('gulp-less');\nvar path = require('path');\n\ngulp.task('less', function () {\n  gulp.src('./less/**/*.less')\n    .pipe(less({\n      paths: [ path.join(__dirname, 'less', 'includes') ]\n    }))\n    .pipe(gulp.dest('./public/css'));\n});\n```\n\n\n## Options\n\nThe options are the same as what's supported by the less parser, with the exception of `sourceMapFilename` and `sourcemap`.  These options will do nothing.  Use [gulp-sourcemaps](https://github.com/floridoo/gulp-sourcemaps) to generate sourcemaps.\n\n## CleanCSS\n\nAs of version 1.3.7 of gulp-less, less 2.0 is being used. Cleancss has been removed from LESS core, and has become a less plugin. If you would like to continue to use cleancss, you need to use it as a LESS plugin.\n\n```\nnpm install less-plugin-clean-css --save-dev\n```\n\n```javascript\nvar LessPluginCleanCSS = require(\"less-plugin-clean-css\"),\n    cleancss = new LessPluginCleanCSS({advanced: true});\n\ngulp.src('./less/**/*.less')\n  .pipe(less({\n    plugins: [cleancss]\n  }))\n  .pipe(gulp.dest('./public/css'));\n\n\n```\n\nSee all options for cleancss here: https://github.com/jakubpawlowicz/clean-css#how-to-use-clean-css-programmatically\n\n## Plugins\n\nIf you are using version 1.3.7 or higher you will have the ability to use a growing set LESS plugins, potentially simplifying your build steps.\n\nContinuing on the cleancss as a plugin pattern, we can include the [autoprefix plugin](https://github.com/less/less-plugin-autoprefix).\n```\nnpm install less-plugin-autoprefix --save-dev\n```\n\n```javascript\nvar LessPluginCleanCSS = require(\"less-plugin-clean-css\"),\n    cleancss = new LessPluginCleanCSS({advanced: true});\n    \nvar LessPluginAutoPrefix = require('less-plugin-autoprefix'),\n    autoprefix= new LessPluginAutoPrefix({browsers: [\"last 2 versions\"]});\n\n\ngulp.src('./less/**/*.less')\n  .pipe(less({\n    plugins: [autoprefix, cleancss]\n  }))\n  .pipe(gulp.dest('./public/css'));\n\n\n```\n\nMore info on LESS plugins can be found at http://lesscss.org/usage/#plugins, including a current list of plugins.\n\n\n## Source maps\n\ngulp-less can be used in tandem with [gulp-sourcemaps](https://github.com/floridoo/gulp-sourcemaps) to generate source maps for the less to CSS transition. You will need to initialize [gulp-sourcemaps](https://github.com/floridoo/gulp-sourcemaps) prior to running the gulp-less compiler and write the source maps after.\n\n```javascript\nvar sourcemaps = require('gulp-sourcemaps');\n\ngulp.src('./less/**/*.less')\n  .pipe(sourcemaps.init())\n  .pipe(less())\n  .pipe(sourcemaps.write())\n  .pipe(gulp.dest('./public/css'));\n\n// will write the source maps inline in the compiled CSS files\n```\n\nBy default, [gulp-sourcemaps](https://github.com/floridoo/gulp-sourcemaps) writes the source maps inline in the compiled CSS files. To write them to a separate file, specify a relative file path in the `sourcemaps.write()` function.\n\n```javascript\nvar sourcemaps = require('gulp-sourcemaps');\n\ngulp.src('./less/**/*.less')\n  .pipe(sourcemaps.init())\n  .pipe(less())\n  .pipe(sourcemaps.write('./maps'))\n  .pipe(gulp.dest('./public/css'));\n\n// will write the source maps to ./public/css/maps\n```\n\n## Error handling\n\nBy default, a gulp task will fail and all streams will halt when an error happens. To change this behavior check out the error handling documentation [here](https://github.com/gulpjs/gulp/blob/master/docs/recipes/combining-streams-to-handle-errors.md)\n\n## License\n\n(MIT License)\n\nCopyright (c) 2015 Plus 3 Network dev@plus3network.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/plus3network/gulp-less.git"
  },
  "scripts": {
    "test": "jshint index.js && node_modules/.bin/mocha -R spec"
  },
  "version": "2.0.3"
}
